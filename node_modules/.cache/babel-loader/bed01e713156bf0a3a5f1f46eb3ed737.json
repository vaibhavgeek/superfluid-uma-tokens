{"ast":null,"code":"export function natToStringifiedNatMapper(options) {\n  const [style, v] = options;\n\n  switch (style) {\n    case 'oct':\n      return `0${Number(v).toString(8)}`;\n\n    case 'hex':\n      return `0x${Number(v).toString(16)}`;\n\n    case 'dec':\n    default:\n      return `${v}`;\n  }\n}\nexport function tryParseStringifiedNat(stringValue, radix) {\n  const parsedNat = Number.parseInt(stringValue, radix);\n\n  if (parsedNat.toString(radix) !== stringValue) {\n    throw new Error('Invalid value');\n  }\n\n  return parsedNat;\n}\nexport function natToStringifiedNatUnmapper(value) {\n  if (typeof value !== 'string') {\n    throw new Error('Invalid type');\n  }\n\n  if (value.length >= 2 && value[0] === '0') {\n    if (value[1] === 'x') {\n      return ['hex', tryParseStringifiedNat(value.substr(2), 16)];\n    }\n\n    return ['oct', tryParseStringifiedNat(value.substr(1), 8)];\n  }\n\n  return ['dec', tryParseStringifiedNat(value, 10)];\n}","map":null,"metadata":{},"sourceType":"module"}