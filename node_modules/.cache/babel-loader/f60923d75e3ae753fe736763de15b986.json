{"ast":null,"code":"var _jsxFileName = \"/home/vaibhavgeek/hackathons/superfluid-uma/src/components/sections/FormIDA.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { SectionProps } from \"../../utils/SectionProps\";\nimport SectionHeader from \"./partials/SectionHeader\";\nimport Input from \"../elements/Input\";\nimport Button from \"../elements/Button\";\n\nconst axios = require(\"axios\");\n\nconst SuperfluidSDK = require(\"@superfluid-finance/js-sdk\");\n\nconst {\n  Web3Provider\n} = require(\"@ethersproject/providers\");\n\nconst propTypes = { ...SectionProps.types\n};\nconst defaultProps = { ...SectionProps.defaults\n};\n\nclass LoginForm extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contractAddress: \"\",\n      recipientAddress: \"\"\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      console.log(this.state);\n      window.ethereum.enable();\n      const sf = new SuperfluidSDK.Framework({\n        ethers: new Web3Provider(window.ethereum)\n      });\n      await sf.initialize();\n      const walletAddress = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n        params: [{\n          eth_accounts: {}\n        }]\n      });\n      const carol = sf.user({\n        address: walletAddress[0],\n        token: \"0xd9Eb07994820dF2798FB335254d468246f83AB6C\"\n      });\n      let details = await carol.details();\n      console.log(details);\n      await carol.flow({\n        recipient: \"0x230eBd3F5F443Dc8d64fA3c01f242b4F880E07c2\",\n        flowRate: \"385802469135802\"\n      });\n      details = await carol.details();\n      console.log(details);\n\n      function createPlayBatchCall() {\n        let upgradeAmount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        return [[101, // upgrade 100 daix to play the game\n        '0x46CE36F1e483f55CEd7f638633F929Df50bBDC65', web3.eth.abi.encodeParameters([\"uint256\"], [toWad(upgradeAmount).toString()])], [201, // create constant flow (10/mo)\n        sf.agreements.cfa.address, web3.eth.abi.encodeParameters([\"bytes\", \"bytes\"], [sf.agreements.cfa.contract.methods.createFlow(daix.address, app.address, MINIMUM_GAME_FLOW_RATE.toString(), \"0x\").encodeABI(), // callData\n        \"0x\" // userData\n        ])]];\n      } // Call the host with the batch call parameters\n\n\n      await sf.host.batchCall(createPlayBatchCall(5));\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://run.mocky.io/v3/2e64e74b-b232-431c-804a-8a5b0b0bf113\").then(function (response) {\n      // handle success\n      console.log(\"api json\", response.data);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).then(function () {// always executed\n    });\n  }\n\n  render() {\n    const {\n      className,\n      topOuterDivider,\n      bottomOuterDivider,\n      topDivider,\n      bottomDivider,\n      hasBgColor,\n      invertColor,\n      ...props\n    } = this.props;\n    const outerClasses = classNames(\"signin section\", topOuterDivider && \"has-top-divider\", bottomOuterDivider && \"has-bottom-divider\", hasBgColor && \"has-bg-color\", invertColor && \"invert-color\", className);\n    const sectionHeader = {\n      title: \"KPI Options Token Distribution via Superfluid Streams\"\n    };\n    return /*#__PURE__*/React.createElement(\"section\", Object.assign({}, props, {\n      className: outerClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SectionHeader, {\n      tag: \"h3\",\n      data: sectionHeader,\n      className: \"center-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tiles-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tiles-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tiles-item-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"input\",\n      label: \"ERC 20 Super Token Address\",\n      placeholder: \"ERC 20 Super Token Address\",\n      onChange: e => this.setState({\n        contractAddress: e.target.value\n      }),\n      required: true,\n      state: \"contractAddress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-24 mb-32\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      wide: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, \"Distribute Long Tokens Instantly\"))))))))));\n  }\n\n}\n\nLoginForm.propTypes = propTypes;\nLoginForm.defaultProps = defaultProps;\nexport default LoginForm;","map":{"version":3,"sources":["/home/vaibhavgeek/hackathons/superfluid-uma/src/components/sections/FormIDA.js"],"names":["React","classNames","SectionProps","SectionHeader","Input","Button","axios","require","SuperfluidSDK","Web3Provider","propTypes","types","defaultProps","defaults","LoginForm","Component","state","contractAddress","recipientAddress","handleSubmit","event","preventDefault","console","log","window","ethereum","enable","sf","Framework","ethers","initialize","walletAddress","request","method","params","eth_accounts","carol","user","address","token","details","flow","recipient","flowRate","createPlayBatchCall","upgradeAmount","web3","eth","abi","encodeParameters","toWad","toString","agreements","cfa","contract","methods","createFlow","daix","app","MINIMUM_GAME_FLOW_RATE","encodeABI","host","batchCall","componentDidMount","get","then","response","data","catch","error","render","className","topOuterDivider","bottomOuterDivider","topDivider","bottomDivider","hasBgColor","invertColor","props","outerClasses","sectionHeader","title","e","setState","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport { SectionProps } from \"../../utils/SectionProps\";\nimport SectionHeader from \"./partials/SectionHeader\";\nimport Input from \"../elements/Input\";\nimport Button from \"../elements/Button\";\nconst axios = require(\"axios\");\nconst SuperfluidSDK = require(\"@superfluid-finance/js-sdk\");\nconst { Web3Provider } = require(\"@ethersproject/providers\");\n\nconst propTypes = {\n  ...SectionProps.types,\n};\n\nconst defaultProps = {\n  ...SectionProps.defaults,\n};\n\nclass LoginForm extends React.Component {\n  state = {\n    contractAddress: \"\",\n    recipientAddress: \"\",\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"https://run.mocky.io/v3/2e64e74b-b232-431c-804a-8a5b0b0bf113\")\n      .then(function (response) {\n        // handle success\n        console.log(\"api json\", response.data);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(this.state);\n\n    window.ethereum.enable();\n\n    const sf = new SuperfluidSDK.Framework({\n      ethers: new Web3Provider(window.ethereum),\n    });\n\n    await sf.initialize();\n\n    const walletAddress = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n      params: [\n        {\n          eth_accounts: {},\n        },\n      ],\n    });\n\n    const carol = sf.user({\n      address: walletAddress[0],\n      token: \"0xd9Eb07994820dF2798FB335254d468246f83AB6C\",\n    });\n\n    let details = await carol.details();\n    console.log(details);\n\n    await carol.flow({\n      recipient: \"0x230eBd3F5F443Dc8d64fA3c01f242b4F880E07c2\",\n      flowRate: \"385802469135802\",\n    });\n    details = await carol.details();\n    console.log(details);\n\n\n    function createPlayBatchCall(upgradeAmount = 0) {\n      return [\n          [\n              101, // upgrade 100 daix to play the game\n              '0x46CE36F1e483f55CEd7f638633F929Df50bBDC65',\n              web3.eth.abi.encodeParameters(\n                  [\"uint256\"],\n                  [toWad(upgradeAmount).toString()]\n              )\n          ],\n          [\n              201, // create constant flow (10/mo)\n              sf.agreements.cfa.address,\n              web3.eth.abi.encodeParameters(\n                  [\"bytes\", \"bytes\"],\n                  [\n                      sf.agreements.cfa.contract.methods\n                          .createFlow(\n                              daix.address,\n                              app.address,\n                              MINIMUM_GAME_FLOW_RATE.toString(),\n                              \"0x\"\n                          )\n                          .encodeABI(), // callData\n                      \"0x\" // userData\n                  ]\n              )\n          ]\n      ];\n  }\n  \n  // Call the host with the batch call parameters\n  await sf.host.batchCall(createPlayBatchCall(5))\n  };\n\n  render() {\n    const {\n      className,\n      topOuterDivider,\n      bottomOuterDivider,\n      topDivider,\n      bottomDivider,\n      hasBgColor,\n      invertColor,\n      ...props\n    } = this.props;\n\n    const outerClasses = classNames(\n      \"signin section\",\n      topOuterDivider && \"has-top-divider\",\n      bottomOuterDivider && \"has-bottom-divider\",\n      hasBgColor && \"has-bg-color\",\n      invertColor && \"invert-color\",\n      className\n    );\n\n    const sectionHeader = {\n      title: \"KPI Options Token Distribution via Superfluid Streams\",\n    };\n\n    return (\n      <section {...props} className={outerClasses}>\n        <div className=\"container\">\n          <div>\n            <SectionHeader\n              tag=\"h3\"\n              data={sectionHeader}\n              className=\"center-content\"\n            />\n            <div className=\"tiles-wrap\">\n              <div className=\"tiles-item\">\n                <div className=\"tiles-item-inner\">\n                  <form onSubmit={this.handleSubmit}>\n                    <fieldset>\n                      <div className=\"mb-12\">\n                        <Input\n                          type=\"input\"\n                          label=\"ERC 20 Super Token Address\"\n                          placeholder=\"ERC 20 Super Token Address\"\n                          onChange={(e) =>\n                            this.setState({ contractAddress: e.target.value })\n                          }\n                          required\n                          state=\"contractAddress\"\n                        />\n                      </div>\n\n                      <div className=\"mt-24 mb-32\">\n                        <Button type=\"submit\" color=\"primary\" wide>\n                          Distribute Long Tokens Instantly\n                        </Button>\n                      </div>\n                    </fieldset>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nLoginForm.propTypes = propTypes;\nLoginForm.defaultProps = defaultProps;\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}