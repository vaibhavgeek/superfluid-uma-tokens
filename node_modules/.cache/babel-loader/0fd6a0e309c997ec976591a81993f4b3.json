{"ast":null,"code":"function subArrayContains(tab, upperBound, includeValue) {\n  for (let idx = 0; idx < upperBound; ++idx) {\n    if (includeValue(tab[idx])) return true;\n  }\n\n  return false;\n}\n\nfunction swap(tab, idx1, idx2) {\n  const temp = tab[idx1];\n  tab[idx1] = tab[idx2];\n  tab[idx2] = temp;\n}\n\nexport function buildCompareFilter(compare) {\n  return tab => {\n    let finalLength = tab.length;\n\n    for (let idx = tab.length - 1; idx !== -1; --idx) {\n      if (subArrayContains(tab, idx, t => compare(t.value_, tab[idx].value_))) {\n        --finalLength;\n        swap(tab, idx, finalLength);\n      }\n    }\n\n    return tab.slice(0, finalLength);\n  };\n}","map":null,"metadata":{},"sourceType":"module"}