{"ast":null,"code":"var _jsxFileName = \"/home/vaibhavgeek/hackathons/superfluid-uma/src/components/sections/FormIDA.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { SectionProps } from \"../../utils/SectionProps\";\nimport SectionHeader from \"./partials/SectionHeader\";\nimport Input from \"../elements/Input\";\nimport Button from \"../elements/Button\";\n\nconst axios = require(\"axios\");\n\nconst SuperfluidSDK = require(\"@superfluid-finance/js-sdk\");\n\nconst Web3 = require(\"web3\");\n\nconst propTypes = { ...SectionProps.types\n};\nconst defaultProps = { ...SectionProps.defaults\n};\nlet sf;\n\nclass LoginForm extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contractAddress: \"\",\n      recipientAddress: \"\",\n      walletAddress: \"\"\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      console.log(this.state);\n      let poolArray = [];\n      axios.get(\"https://run.mocky.io/v3/2e64e74b-b232-431c-804a-8a5b0b0bf113\").then(function (response) {\n        let data = JSON.parse(response.data);\n        let total = data[\"total_kpi_target\"];\n        let recipeints = data[\"recipients\"];\n        console.log(\"total kpi target\", total);\n        recipeints.map(recipient => {\n          console.log(\"res\", recipient);\n        }); //console.log(\"api json\", response.data);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).then(function () {// always executed\n      }); // const carol = sf.user({\n      //   address: this.state.walletAddress,\n      //   token: \"0xF2d68898557cCb2Cf4C10c3Ef2B034b2a69DAD00\",\n      // });\n      // await carol.flow({\n      //   recipient: \"0x52DBDfa46Cd6AeC23e248c3D2cec723830D227CD\",\n      //   flowRate: \"385802469135802\",\n      // });\n      // window.ethereum.enable();\n      // const sf = new SuperfluidSDK.Framework({\n      //   ethers: new Web3Provider(window.ethereum),\n      // });\n      // await sf.initialize();\n      // const walletAddress = await window.ethereum.request({\n      //   method: \"eth_requestAccounts\",\n      //   params: [\n      //     {\n      //       eth_accounts: {},\n      //     },\n      //   ],\n      // });\n      // const carol = sf.user({\n      //   address: walletAddress[0],\n      //   token: \"0xd9Eb07994820dF2798FB335254d468246f83AB6C\",\n      // });\n      // let details = await carol.details();\n      // console.log(details);\n      // await carol.flow({\n      //   recipient: \"0x230eBd3F5F443Dc8d64fA3c01f242b4F880E07c2\",\n      //   flowRate: \"385802469135802\",\n      // });\n      // details = await carol.details();\n      // console.log(details);\n    };\n  }\n\n  async componentDidMount() {\n    sf = new SuperfluidSDK.Framework({\n      web3: new Web3(window.ethereum)\n    });\n    await sf.initialize();\n    const walletAddress = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n      params: [{\n        eth_accounts: {}\n      }]\n    });\n    console.log(\"wallet-address\", walletAddress);\n    this.setState({\n      walletAddress: walletAddress[0]\n    });\n  }\n\n  render() {\n    const {\n      className,\n      topOuterDivider,\n      bottomOuterDivider,\n      topDivider,\n      bottomDivider,\n      hasBgColor,\n      invertColor,\n      ...props\n    } = this.props;\n    const outerClasses = classNames(\"signin section\", topOuterDivider && \"has-top-divider\", bottomOuterDivider && \"has-bottom-divider\", hasBgColor && \"has-bg-color\", invertColor && \"invert-color\", className);\n    const sectionHeader = {\n      title: \"KPI Options Token Distribution via Superfluid Streams\"\n    };\n    return /*#__PURE__*/React.createElement(\"section\", Object.assign({}, props, {\n      className: outerClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SectionHeader, {\n      tag: \"h3\",\n      data: sectionHeader,\n      className: \"center-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tiles-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tiles-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tiles-item-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"input\",\n      label: \"ERC 20 Super Token Address\",\n      placeholder: \"ERC 20 Super Token Address\",\n      onChange: e => this.setState({\n        contractAddress: e.target.value\n      }),\n      required: true,\n      state: \"contractAddress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-24 mb-32\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      wide: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, \"Distribute Long Tokens Instantly\"))))))))));\n  }\n\n}\n\nLoginForm.propTypes = propTypes;\nLoginForm.defaultProps = defaultProps;\nexport default LoginForm;","map":{"version":3,"sources":["/home/vaibhavgeek/hackathons/superfluid-uma/src/components/sections/FormIDA.js"],"names":["React","classNames","SectionProps","SectionHeader","Input","Button","axios","require","SuperfluidSDK","Web3","propTypes","types","defaultProps","defaults","sf","LoginForm","Component","state","contractAddress","recipientAddress","walletAddress","handleSubmit","event","preventDefault","console","log","poolArray","get","then","response","data","JSON","parse","total","recipeints","map","recipient","catch","error","componentDidMount","Framework","web3","window","ethereum","initialize","request","method","params","eth_accounts","setState","render","className","topOuterDivider","bottomOuterDivider","topDivider","bottomDivider","hasBgColor","invertColor","props","outerClasses","sectionHeader","title","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport { SectionProps } from \"../../utils/SectionProps\";\nimport SectionHeader from \"./partials/SectionHeader\";\nimport Input from \"../elements/Input\";\nimport Button from \"../elements/Button\";\n\nconst axios = require(\"axios\");\nconst SuperfluidSDK = require(\"@superfluid-finance/js-sdk\");\nconst Web3 = require(\"web3\");\n\n\nconst propTypes = {\n  ...SectionProps.types,\n};\n\nconst defaultProps = {\n  ...SectionProps.defaults,\n};\n\nlet sf;\n\nclass LoginForm extends React.Component {\n  state = {\n    contractAddress: \"\",\n    recipientAddress: \"\",\n    walletAddress: \"\",\n  };\n\n  async componentDidMount() {\n    sf = new SuperfluidSDK.Framework({\n      web3: new Web3(window.ethereum),\n    });   \n    await sf.initialize()\n    const walletAddress = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n      params: [\n        {\n          eth_accounts: {}\n        }\n      ]\n    });\n    console.log(\"wallet-address\", walletAddress);\n    this.setState({walletAddress: walletAddress[0]});\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(this.state);\n\n    let poolArray = [];\n\n    axios\n    .get(\"https://run.mocky.io/v3/2e64e74b-b232-431c-804a-8a5b0b0bf113\")\n    .then(function (response) {\n\n      let data= JSON.parse(response.data);\n      let total = data[\"total_kpi_target\"];\n      let recipeints = data[\"recipients\"];\n      \n      console.log(\"total kpi target\", total); \n      recipeints.map(recipient => {\n        console.log(\"res\", recipient);\n      });\n      //console.log(\"api json\", response.data);\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    })\n    .then(function () {\n      // always executed\n    });\n\n    // const carol = sf.user({\n    //   address: this.state.walletAddress,\n    //   token: \"0xF2d68898557cCb2Cf4C10c3Ef2B034b2a69DAD00\",\n    // });\n\n    // await carol.flow({\n    //   recipient: \"0x52DBDfa46Cd6AeC23e248c3D2cec723830D227CD\",\n    //   flowRate: \"385802469135802\",\n    // });\n\n\n    // window.ethereum.enable();\n\n    // const sf = new SuperfluidSDK.Framework({\n    //   ethers: new Web3Provider(window.ethereum),\n    // });\n\n    // await sf.initialize();\n\n    // const walletAddress = await window.ethereum.request({\n    //   method: \"eth_requestAccounts\",\n    //   params: [\n    //     {\n    //       eth_accounts: {},\n    //     },\n    //   ],\n    // });\n\n    // const carol = sf.user({\n    //   address: walletAddress[0],\n    //   token: \"0xd9Eb07994820dF2798FB335254d468246f83AB6C\",\n    // });\n\n    // let details = await carol.details();\n    // console.log(details);\n\n    // await carol.flow({\n    //   recipient: \"0x230eBd3F5F443Dc8d64fA3c01f242b4F880E07c2\",\n    //   flowRate: \"385802469135802\",\n    // });\n    // details = await carol.details();\n    // console.log(details);\n  \n  };\n\n  render() {\n    const {\n      className,\n      topOuterDivider,\n      bottomOuterDivider,\n      topDivider,\n      bottomDivider,\n      hasBgColor,\n      invertColor,\n      ...props\n    } = this.props;\n\n    const outerClasses = classNames(\n      \"signin section\",\n      topOuterDivider && \"has-top-divider\",\n      bottomOuterDivider && \"has-bottom-divider\",\n      hasBgColor && \"has-bg-color\",\n      invertColor && \"invert-color\",\n      className\n    );\n\n    const sectionHeader = {\n      title: \"KPI Options Token Distribution via Superfluid Streams\",\n    };\n\n    return (\n      <section {...props} className={outerClasses}>\n        <div className=\"container\">\n          <div>\n            <SectionHeader\n              tag=\"h3\"\n              data={sectionHeader}\n              className=\"center-content\"\n            />\n            <div className=\"tiles-wrap\">\n              <div className=\"tiles-item\">\n                <div className=\"tiles-item-inner\">\n                  <form onSubmit={this.handleSubmit}>\n                    <fieldset>\n                      <div className=\"mb-12\">\n                        <Input\n                          type=\"input\"\n                          label=\"ERC 20 Super Token Address\"\n                          placeholder=\"ERC 20 Super Token Address\"\n                          onChange={(e) =>\n                            this.setState({ contractAddress: e.target.value })\n                          }\n                          required\n                          state=\"contractAddress\"\n                        />\n                      </div>\n\n                      <div className=\"mt-24 mb-32\">\n                        <Button type=\"submit\" color=\"primary\" wide>\n                          Distribute Long Tokens Instantly\n                        </Button>\n                      </div>\n                    </fieldset>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nLoginForm.propTypes = propTypes;\nLoginForm.defaultProps = defaultProps;\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}