{"ast":null,"code":"var _jsxFileName = \"/home/vaibhavgeek/hackathons/superfluid-uma/src/components/sections/FormIDA.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { SectionProps } from \"../../utils/SectionProps\";\nimport SectionHeader from \"./partials/SectionHeader\";\nimport Input from \"../elements/Input\";\nimport Button from \"../elements/Button\";\n\nconst axios = require(\"axios\");\n\nconst SuperfluidSDK = require(\"@superfluid-finance/js-sdk\");\n\nconst Web3 = require(\"web3\");\n\nconst propTypes = { ...SectionProps.types\n};\nconst defaultProps = { ...SectionProps.defaults\n};\nlet sf;\n\nclass LoginForm extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contractAddress: \"\",\n      walletAddress: \"\"\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      console.log(this.state);\n      let poolArray = [];\n      axios.get(\"https://618e1d3950e24d0017ce1080.mockapi.io/mock\").then(function (response) {\n        console.log(response.data);\n        let data = response.data;\n        let total = data[\"total_kpi_target\"];\n        let recipeints = data[\"recipients\"];\n        console.log(\"total kpi target\", recipeints);\n        recipeints.map(recipient => {\n          poolArray.push({\n            \"recipient\": recipient[\"address\"],\n            \"shares\": parseInt(recipient[\"work_done\"] * 100) / parseInt(total)\n          });\n        });\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).then(function () {// always executed\n      });\n      console.log(\"walletaddress\", this.state.walletAddress);\n      const owner = sf.user({\n        address: this.state.walletAddress,\n        token: \"0xe3CB950Cb164a31C66e32c320A800D477019DCFF\"\n      });\n      let details = await owner.details();\n      console.log(details); // await owner.flow({\n      //   recipient: \"0x230eBd3F5F443Dc8d64fA3c01f242b4F880E07c2\",\n      //   flowRate: \"85802469135802\",\n      // });\n\n      let poolId = 9000; // await owner.createPool({ poolId: poolId });\n      // poolArray.map(async pool => {\n      //   console.log(\"json for pool\", {poolId: poolId, ...pool});\n      //   await owner.giveShares({ poolId: poolId, ...pool });\n      // });\n\n      await owner.distributeToPool({\n        poolId: poolId,\n        amount: 500\n      }); // window.ethereum.enable();\n      // const sf = new SuperfluidSDK.Framework({\n      //   ethers: new Web3Provider(window.ethereum),\n      // });\n      // await sf.initialize();\n      // const walletAddress = await window.ethereum.request({\n      //   method: \"eth_requestAccounts\",\n      //   params: [\n      //     {\n      //       eth_accounts: {},\n      //     },\n      //   ],\n      // });\n      // const carol = sf.user({\n      //   address: walletAddress[0],\n      //   token: \"0xd9Eb07994820dF2798FB335254d468246f83AB6C\",\n      // });\n      // let details = await carol.details();\n      // console.log(details);\n      // await carol.flow({\n      //   recipient: \"0x230eBd3F5F443Dc8d64fA3c01f242b4F880E07c2\",\n      //   flowRate: \"385802469135802\",\n      // });\n      // details = await carol.details();\n      // console.log(details);\n    };\n  }\n\n  async componentDidMount() {\n    sf = new SuperfluidSDK.Framework({\n      web3: new Web3(window.ethereum)\n    });\n    await sf.initialize();\n    const walletAddress = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n      params: [{\n        eth_accounts: {}\n      }]\n    });\n    console.log(\"wallet-address\", walletAddress);\n    this.setState({\n      walletAddress: walletAddress[0],\n      contractAddress: ''\n    });\n  }\n\n  render() {\n    const {\n      className,\n      topOuterDivider,\n      bottomOuterDivider,\n      topDivider,\n      bottomDivider,\n      hasBgColor,\n      invertColor,\n      ...props\n    } = this.props;\n    const outerClasses = classNames(\"signin section\", topOuterDivider && \"has-top-divider\", bottomOuterDivider && \"has-bottom-divider\", hasBgColor && \"has-bg-color\", invertColor && \"invert-color\", className);\n    const sectionHeader = {\n      title: \"KPI Options Token Distribution via Superfluid Streams\"\n    };\n    return /*#__PURE__*/React.createElement(\"section\", Object.assign({}, props, {\n      className: outerClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SectionHeader, {\n      tag: \"h3\",\n      data: sectionHeader,\n      className: \"center-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tiles-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tiles-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tiles-item-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"input\",\n      label: \"ERC 20 Super Token Address\",\n      placeholder: \"ERC 20 Super Token Address\",\n      onChange: e => this.setState({\n        contractAddress: e.target.value\n      }),\n      required: true,\n      state: \"contractAddress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-24 mb-32\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      wide: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }, \"Distribute Long Tokens Instantly\"))))))))));\n  }\n\n}\n\nLoginForm.propTypes = propTypes;\nLoginForm.defaultProps = defaultProps;\nexport default LoginForm;","map":{"version":3,"sources":["/home/vaibhavgeek/hackathons/superfluid-uma/src/components/sections/FormIDA.js"],"names":["React","classNames","SectionProps","SectionHeader","Input","Button","axios","require","SuperfluidSDK","Web3","propTypes","types","defaultProps","defaults","sf","LoginForm","Component","state","contractAddress","walletAddress","handleSubmit","event","preventDefault","console","log","poolArray","get","then","response","data","total","recipeints","map","recipient","push","parseInt","catch","error","owner","user","address","token","details","poolId","distributeToPool","amount","componentDidMount","Framework","web3","window","ethereum","initialize","request","method","params","eth_accounts","setState","render","className","topOuterDivider","bottomOuterDivider","topDivider","bottomDivider","hasBgColor","invertColor","props","outerClasses","sectionHeader","title","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport { SectionProps } from \"../../utils/SectionProps\";\nimport SectionHeader from \"./partials/SectionHeader\";\nimport Input from \"../elements/Input\";\nimport Button from \"../elements/Button\";\n\nconst axios = require(\"axios\");\nconst SuperfluidSDK = require(\"@superfluid-finance/js-sdk\");\nconst Web3 = require(\"web3\");\n\n\nconst propTypes = {\n  ...SectionProps.types,\n};\n\nconst defaultProps = {\n  ...SectionProps.defaults,\n};\n\nlet sf;\n\nclass LoginForm extends React.Component {\n  state = {\n    contractAddress: \"\",\n    walletAddress: \"\",\n  };\n\n  async componentDidMount() {\n    sf = new SuperfluidSDK.Framework({\n      web3: new Web3(window.ethereum),\n    });   \n    await sf.initialize()\n    const walletAddress = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n      params: [\n        {\n          eth_accounts: {}\n        }\n      ]\n    });\n    console.log(\"wallet-address\", walletAddress);\n    this.setState({walletAddress: walletAddress[0], contractAddress: ''});\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(this.state);\n\n    let poolArray = [];\n\n    axios\n    .get(\"https://618e1d3950e24d0017ce1080.mockapi.io/mock\")\n    .then(function (response) {\n      console.log(response.data);\n      let data= response.data;\n      let total = data[\"total_kpi_target\"];\n      let recipeints = data[\"recipients\"];\n      \n      console.log(\"total kpi target\", recipeints); \n      recipeints.map(recipient => {\n        poolArray.push({ \"recipient\": recipient[\"address\"] , \"shares\": parseInt(recipient[\"work_done\"]*100)/parseInt(total) });\n      });\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    })\n    .then(function () {\n      // always executed\n    });\n\n    console.log(\"walletaddress\" , this.state.walletAddress);\n    const owner = sf.user({\n      address: this.state.walletAddress,\n      token: \"0xe3CB950Cb164a31C66e32c320A800D477019DCFF\",\n    });\n    let details = await owner.details();\n    console.log(details);\n\n\n    // await owner.flow({\n    //   recipient: \"0x230eBd3F5F443Dc8d64fA3c01f242b4F880E07c2\",\n    //   flowRate: \"85802469135802\",\n    // });\n     let poolId = 9000;\n    // await owner.createPool({ poolId: poolId });\n    // poolArray.map(async pool => {\n    //   console.log(\"json for pool\", {poolId: poolId, ...pool});\n    //   await owner.giveShares({ poolId: poolId, ...pool });\n    // });\n\n    await owner.distributeToPool({ poolId: poolId, amount: 500 });\n    // window.ethereum.enable();\n\n    // const sf = new SuperfluidSDK.Framework({\n    //   ethers: new Web3Provider(window.ethereum),\n    // });\n\n    // await sf.initialize();\n\n    // const walletAddress = await window.ethereum.request({\n    //   method: \"eth_requestAccounts\",\n    //   params: [\n    //     {\n    //       eth_accounts: {},\n    //     },\n    //   ],\n    // });\n\n    // const carol = sf.user({\n    //   address: walletAddress[0],\n    //   token: \"0xd9Eb07994820dF2798FB335254d468246f83AB6C\",\n    // });\n\n    // let details = await carol.details();\n    // console.log(details);\n\n    // await carol.flow({\n    //   recipient: \"0x230eBd3F5F443Dc8d64fA3c01f242b4F880E07c2\",\n    //   flowRate: \"385802469135802\",\n    // });\n    // details = await carol.details();\n    // console.log(details);\n  \n  };\n\n  render() {\n    const {\n      className,\n      topOuterDivider,\n      bottomOuterDivider,\n      topDivider,\n      bottomDivider,\n      hasBgColor,\n      invertColor,\n      ...props\n    } = this.props;\n\n    const outerClasses = classNames(\n      \"signin section\",\n      topOuterDivider && \"has-top-divider\",\n      bottomOuterDivider && \"has-bottom-divider\",\n      hasBgColor && \"has-bg-color\",\n      invertColor && \"invert-color\",\n      className\n    );\n\n    const sectionHeader = {\n      title: \"KPI Options Token Distribution via Superfluid Streams\",\n    };\n\n    return (\n      <section {...props} className={outerClasses}>\n        <div className=\"container\">\n          <div>\n            <SectionHeader\n              tag=\"h3\"\n              data={sectionHeader}\n              className=\"center-content\"\n            />\n            <div className=\"tiles-wrap\">\n              <div className=\"tiles-item\">\n                <div className=\"tiles-item-inner\">\n                  <form onSubmit={this.handleSubmit}>\n                    <fieldset>\n                      <div className=\"mb-12\">\n                        <Input\n                          type=\"input\"\n                          label=\"ERC 20 Super Token Address\"\n                          placeholder=\"ERC 20 Super Token Address\"\n                          onChange={(e) =>\n                            this.setState({ contractAddress: e.target.value })\n                          }\n                          required\n                          state=\"contractAddress\"\n                        />\n                      </div>\n\n                      <div className=\"mt-24 mb-32\">\n                        <Button type=\"submit\" color=\"primary\" wide>\n                          Distribute Long Tokens Instantly\n                        </Button>\n                      </div>\n                    </fieldset>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nLoginForm.propTypes = propTypes;\nLoginForm.defaultProps = defaultProps;\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}