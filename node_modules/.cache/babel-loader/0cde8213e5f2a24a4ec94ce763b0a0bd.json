{"ast":null,"code":"const fs = require(\"fs\");\n\nconst path = require(\"path\");\n\nclass GasMeterReporter {\n  constructor(_ref) {\n    let {\n      fileSystem,\n      fileName\n    } = _ref;\n    this.fs = fileSystem ? fileSystem : fs;\n    this.filePath = path.join(process.cwd(), \"reports\");\n\n    if (!fs.existsSync(this.filePath)) {\n      fs.mkdirSync(this.filePath);\n    }\n\n    this.fileName = fileName ? fileName : \"gasReport\";\n  }\n\n}\n\nclass GasMeterJSONReporter extends GasMeterReporter {\n  generateOutput(report) {\n    const result = JSON.stringify(report);\n    this.fs.writeFileSync(`${this.filePath}${this.fileName}.json`, result);\n  }\n\n}\n\nclass GasMeterHTMLReporter extends GasMeterReporter {\n  _joinStrings(prevVal, currVal, idx) {\n    return idx == 0 ? currVal : prevVal + currVal;\n  }\n\n  _generateHeaders(element) {\n    let keys = Object.keys(element);\n    const headers = keys.map(key => {\n      return `<th>${key}</th>`;\n    }).reduce(this._joinStrings);\n    return `<tr>${headers}</tr>`;\n  }\n\n  _generateBody(elements) {\n    return elements.map(tx => {\n      let keys = Object.keys(tx);\n      let tds = keys.map(key => {\n        return `<td>${tx[key]}</td>`;\n      }).reduce(this._joinStrings);\n      return `<tr>${tds}</tr>`;\n    }).reduce(this._joinStrings);\n  }\n\n  generateReport(report) {\n    const htmlStub = require(\"./htmlStub\");\n\n    const statHeaders = this._generateHeaders(Object.values(report.aggregates)[0]);\n\n    const statBody = this._generateBody(Object.values(report.aggregates));\n\n    const txHeaders = this._generateHeaders(report.executedTxs[0]);\n\n    const txTableBody = this._generateBody(report.executedTxs);\n\n    const result = htmlStub.replace(\"{{HEADERS-TX}}\", txHeaders).replace(\"{{BODY-TX}}\", txTableBody).replace(\"{{HEADERS-STATS}}\", statHeaders).replace(\"{{BODY-STATS}}\", statBody).replace(\"{{TITLE}}\", this.fileName);\n    this.fs.writeFileSync(path.join(this.filePath, `${this.fileName}.html`), result);\n  }\n\n}\n\nmodule.exports = {\n  GasMeterJSONReporter,\n  GasMeterHTMLReporter\n};","map":null,"metadata":{},"sourceType":"script"}